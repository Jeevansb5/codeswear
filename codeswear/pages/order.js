import React, { useEffect, useState } from 'react'
import Head from "next/head";
import { useRouter } from 'next/router';
import mongoose from "mongoose"
import Order from "@/models/Order"

const MyOrder = ({ order, clearCart }) => {
  const [date, setDate] = useState()

  let products = order.products;
  const router = useRouter();
  useEffect(() => {
    const d = new Date(order.createdAt)
    setDate(d)
    if (router.query.clearCart == 1) {
      clearCart()
    }
  }, [])

  return (
    <>
      <Head>
        <title>Codeswear - Order</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="text-gray-600 body-font overflow-hidden">
        <div className="container px-5 py-24 mx-auto">
          <div className="lg:w-4/5 mx-auto flex flex-wrap">
            <div className="lg:w-1/2 w-full lg:pr-10 lg:py-6 mb-6 lg:mb-0">
              <h2 className="text-sm title-font text-gray-500 tracking-widest">CODESWEAR.COM</h2>
              <h1 className="text-gray-900 text-3xl title-font font-medium mb-4">Order Id: #{order.orderId}</h1>

              <p className="leading-relaxed mb-2">Your Order has been succefully placed.</p>
              <p className="leading-relaxed mb-2"> Your Payment Status is: <b>{order.status}</b></p>
              <p className="leading-relaxed mb-2">Order Placed On: {date && date.toLocaleDateString("en-IN", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>

              <div className="flex mb-4">
                <a className="flex-grow text-center py-2 text-lg px-1">Description</a>
                <a className="flex-grow text-center py-2 text-lg px-1">Quantity</a>
                <a className="flex-grow text-center py-2 text-lg px-1">Details</a>
              </div>

              {Object.keys(products).map((item) => {
                return <div key={item} className="flex border-t border-gray-200 py-2">
                  <span className="text-gray-500 mx-0">{products[item].name}({products[item].size}/{products[item].variant}) </span>
                  <span className=" text-gray-500 mx-auto">{products[item].qty}</span>
                  <span className=" text-gray-900 mx-auto">₹{products[item].price} X {products[item].qty} = ₹{products[item].price * products[item].qty} </span>
                </div>
              })}

              <div className="flex flex-col">
                <span className="title-font font-medium text-2xl text-gray-900">SubTotal: ₹{order.amount}</span>
              </div>
              <div className='my-2'>
                <button className="flex mx-0 text-white bg-pink-500 border-0 py-2 px-6 focus:outline-none hover:bg-pink-600 rounded">Track Order</button>

              </div>
            </div>
            <img alt="ecommerce" className="lg:w-1/3 w-full lg:h-auto object-cover object-center rounded" src="/hoodie.jpg" />
          </div>
        </div>
      </section>
    </>
  )
}

export async function getServerSideProps(context) {
  if (!mongoose.connections[0].readyState) {
    await mongoose.connect(process.env.MONGO_URI)
  }
  let order = await Order.findById(context.query.id);


  return {
    props: { order: JSON.parse(JSON.stringify(order)) }
  }
}


export default MyOrder
